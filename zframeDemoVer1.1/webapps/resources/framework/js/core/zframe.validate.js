$.extend($.fn.validatebox.defaults.rules, {
	equals: {//两个内容相同   
	    validator: function(value,param){   
	        return value == $(param[0]).val();   
	    },   
	    message: '两次输入的内容不匹配'  
	},
	chinese:{
		// 验证中文
        validator:function (value) {
            return /^[\Α-\￥]+$/i.test(value);
        },
        message: '请输入中文'
    },
    minLength: {//最小长度
        validator: function(value, param){   
            return value.length >= param[0];   
        },   
        message: '至少输入 {0}个字符'  
    },
    maxLength: {//最大长度 
        validator: function(value, param){   
        	return value.length <= param[0];   
        },   
        message: '最多输入 {0}个字符'  
    },
    idcard:{
        validator:function (value,param) {
        	var patrn=/^\d{15}(\d{2}[A-Za-z0-9])?$/;
            return patrn.exec(value);
        },
        message:'请输入有效的身份证号码'
    },
    telphone:{
    	validator:function(value,param){
    		var patrn=/^[+]{0,1}(\d){1,3}[ ]?([-]?((\d)|[ ]){1,12})+$/;
    		return patrn.exec(value);
    	},
    	message:'请输入有效的固定电话号码'
    },
    mobile:{
    	validator:function(value,param){
    		var patrn=/^[+]{0,1}(\d){1,3}[ ]?([-]?((\d)|[ ]){1,12})+$/; 
    		return patrn.exec(value);
    	},
    	message:'请输入有效的手机号码'
    },
    zip:{
    	validator:function(value,param){
    		var patrn=/^[a-zA-Z0-9 ]{3,12}$/; 
    		return patrn.exec(value);
    	},
    	message:'请输入有效的邮政编码'
    },
    ip:{
    	validator:function(value,param){
    		var patrn=/^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$/;
    		return patrn.exec(value);
    	},
    	message:'请输入有效的IP地址'
    },
    noChinese:{
    	validator:function(value,param){
    		return !(/[\Α-\￥]+/i.test(value));
    	},
    	message:'不可包含中文'
    },
    english:{
    	validator:function(value,param){
    		return /^[A-Za-z]+$/.test(value);
    	},
    	message:'只可以输入英文字符'
    },
    date:{
        validator:function(value,param){
            var p = /((^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))/ig;
            return p.test(d);
        },
        message:'请输入有效日期'
    }
});
var Validate = {
    date : function(d){
        var p = /((^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))/ig;
        return p.test(d);
    }
};
